name: Merge JUnit reports
author: donnerbart@users.noreply.github.com
description: Merges the JUnit reports from the test split jobs and saves them in a Git branch
branding:
  icon: archive
  color: blue
inputs:
  git-branch:
    description: The Git branch in this repository to store the JUnit reports in (string)
    required: true
    type: string
  artifact-name:
    description: The artifact name for the merged JUnit reports of all test split jobs (string)
    required: true
    type: string
  split-artifact-pattern:
    description: The artifact name pattern used by the test split jobs, e.g. junit-xml-reports-* (string)
    required: true
    type: string
  split-artifact-delete-merged:
    description: Configures if the artifacts of the test split jobs should be deleted after the merge (boolean)
    required: false
    type: boolean
    default: true
  cleanup-junit-reports:
    description: Configures if the test output should be removed from the merged JUnit reports (boolean)
    required: false
    type: boolean
    default: true
  delete-old-junit-reports:
    description: Configures if the old JUnit reports in the Git branch should be deleted (boolean)
    required: false
    type: boolean
    default: true
runs:
  using: composite
  steps:
    - name: Set up xmlstarlet
      shell: bash
      run: |
        sudo apt update
        sudo apt install -y xmlstarlet

    - name: Checkout repository
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      with:
        path: junit-reports

    - name: Create orphaned branch if checkout failed
      shell: bash
      working-directory: junit-reports
      run: |
        if git ls-remote --exit-code --heads origin ${{ inputs.git-branch }}; then
          echo "Switching to existing branch ${{ inputs.git-branch }}"
          git fetch --quiet
          git switch ${{ inputs.git-branch }}
        else
          echo "Creating new branch ${{ inputs.git-branch }}"
          git switch --orphan ${{ inputs.git-branch }}
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"
          git commit --allow-empty -m "Initial commit for JUnit reports branch"
          git push origin --set-upstream ${{ inputs.git-branch }}
        fi

    - name: Merge JUnit report artifacts
      uses: actions/upload-artifact/merge@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
      with:
        name: ${{ inputs.artifact-name }}
        pattern: ${{ inputs.split-artifact-pattern }}
        delete-merged: ${{ inputs.split-artifact-delete-merged }}

    - name: Download JUnit reports artifact
      uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5
      with:
        name: ${{ inputs.artifact-name }}
        path: junit-reports-artifact

    - name: Clean up JUnit reports
      if: ${{ inputs.cleanup-junit-reports }}
      working-directory: junit-reports-artifact
      shell: bash
      run: |
        echo -n "JUnit report size before cleanup: "
        du -sch *.xml | tail -n 1 | cut -f1
        for REPORT in *.xml; do
          xmlstarlet ed -d '//system-out' -d '//system-err' "$REPORT" > tmp-report.xml && mv tmp-report.xml "$REPORT"
        done
        echo -n "JUnit report size after cleanup: "
        du -sch *.xml | tail -n 1 | cut -f1

    - name: Delete old JUnit reports
      if: ${{ inputs.delete-old-junit-reports }}
      working-directory: junit-reports
      shell: bash
      run: git rm *.xml || true

    - name: Copy new JUnit reports
      shell: bash
      run: cp junit-reports-artifact/*.xml junit-reports/

    - name: Update JUnit reports
      uses: EndBug/add-and-commit@a94899bca583c204427a224a7af87c02f9b325d5 # v9
      with:
        message: 'Update JUnit reports'
        add: '*.xml'
        cwd: junit-reports
