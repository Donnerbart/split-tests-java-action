name: Split Tests Java
author: donnerbart@users.noreply.github.com
description: Splits a JUnit test suite for parallelization with equal time
inputs:
  split-index:
    description: Index of this instance executing the tests (integer)
    required: true
    type: number
  split-total:
    description: Total number of instances executing the tests (integer)
    required: true
    type: number
  glob:
    description: Glob pattern to find test files (string)
    required: true
    type: string
  exclude-glob:
    description: Glob pattern to exclude test files (string)
    required: false
    type: string
    default: ""
  junit-glob:
    description: Glob pattern to find JUnit reports (string)
    required: false
    type: string
  format:
    description: The output format (choice)
    required: false
    type: choice
    options:
      - list
      - gradle
    default: 'list'
  averageTime:
    description: Use the average test time from tests with JUnit reports for tests without JUnit reports (boolean)
    required: false
    type: boolean
    default: false
  workingDirectory:
    description: The working directory. Defaults to the current directory (string)
    type: string
    required: false
  debug:
    description: Enables debug logging (boolean)
    required: false
    type: boolean
    default: false
outputs:
  test-suite:
    description: A subset of tests, based on the the split index and split type
    value: ${{ steps.split-tests.outputs.test-suite }}
  split-total:
    description: Total number of instances executing the tests
    value: ${{ inputs.split-total }}
  split-index:
    description: Index of this instance executing the tests
    value: ${{ inputs.split-index }}
runs:
  using: composite
  steps:
    - name: Install split-tests-java
      shell: bash
      run: curl -L -o split-tests-java.jar "https://github.com/donnerbart/split-tests-java/releases/latest/download/split-tests-java.jar"
    - name: Split tests
      id: split-tests-java
      shell: bash
      run: |
        EXCLUDE_GLOB=""
        if [ -n "${{ inputs.exclude-glob }}" ]; then
          EXCLUDE_GLOB="--exclude-glob '${{ inputs.exclude-glob }}'"
        fi
        JUNIT_GLOB=""
        if [ -n "${{ inputs.junit-glob }}" ]; then
          JUNIT_GLOB="--junit-glob '${{ inputs.junit-glob }}'"
        fi
        TESTS=$(java -jar split-tests-java.jar --split-index ${{ inputs.split-index }} --split-total ${{ inputs.split-total }} --glob '${{ inputs.glob }}' ${EXCLUDE_GLOB} ${JUNIT_GLOB} --format {{ inputs.format }} --average-time ${{ inputs.average-time }} --debug ${{ inputs.debug }})
        echo "This runner will execute the following tests: $TESTS"
        echo "test-suite=${TESTS}" >> $GITHUB_OUTPUT
branding:
  icon: shuffle
  color: yellow
